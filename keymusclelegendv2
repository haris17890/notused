local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,5),v7("\78\3","\148\96\45\59\78\212"),function(v42)if (v9(v42,5 -3 )==79) then local v102=0;while true do if (v102==0) then v30=v8(v11(v42,1,1));return "";end end else local v103=v10(v8(v42,16));if v30 then local v110=v13(v103,v30);v30=nil;return v110;else return v103;end end end);local function v31(v43,v44,v45)if v45 then local v104=0;local v105;while true do if (v104==0) then v105=(v43/((5 -3)^(v44-1)))%(2^(((v45-(1 -0)) -(v44-(2 -1))) + (620 -(555 + 64)))) ;return v105-(v105%1) ;end end else local v106=2^(v44-1) ;return (((v43%(v106 + v106))>=v106) and 1) or (931 -(857 + 74)) ;end end local function v32()local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33()local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * (824 -(367 + 201))) + v48 ;end local function v34()local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * (1183 -(214 + 713))) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35()local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1,20) * (2^(9 + 23))) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,32)==1) and  -1) or 1 ;if (v59==0) then if (v58==0) then return v60 * 0 ;else v59=1;v57=0 + 0 ;end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-(1900 -(282 + 595)) ) * (v57 + (v58/(2^52))) ;end local function v36(v61)local v62;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;local v63={};for v77=1, #v62 do v63[v77]=v10(v9(v11(v62,v77,v77)));end return v14(v63);end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v79=1,v68 do local v80=0;local v81;local v82;while true do if (v80==1) then if (v81==(1638 -(1523 + 114))) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==(3 + 0)) then v82=v36();end v69[v79]=v82;break;end if (v80==0) then v81=v32();v82=nil;v80=1;end end end v67[3]=v32();for v83=1,v34() do local v84=0;local v85;while true do if (v84==0) then v85=v32();if (v31(v85,1,1)==0) then local v116=0;local v117;local v118;local v119;while true do if (v116==1) then v119={v33(),v33(),nil,nil};if (v117==(1065 -(68 + 997))) then local v121=0;while true do if (v121==0) then v119[3]=v33();v119[4]=v33();break;end end elseif (v117==1) then v119[3]=v34();elseif (v117==2) then v119[3]=v34() -((1272 -(226 + 1044))^16) ;elseif (v117==3) then local v293=0;while true do if (v293==0) then v119[3]=v34() -(2^16) ;v119[4]=v33();break;end end end v116=2;end if (v116==3) then if (v31(v118,3,3)==1) then v119[4]=v69[v119[121 -(32 + 85) ]];end v64[v83]=v119;break;end if (v116==2) then if (v31(v118,1,1)==1) then v119[2]=v69[v119[2]];end if (v31(v118,8 -6 ,2)==1) then v119[3]=v69[v119[3]];end v116=3;end if (v116==0) then v117=v31(v85,2,3);v118=v31(v85,4,6);v116=1;end end end break;end end end for v86=1,v34() do v65[v86-1 ]=v39();end return v67;end local function v40(v71,v72,v73)local v74=v71[1];local v75=v71[2];local v76=v71[3 + 0 ];return function(...)local v88=v74;local v89=v75;local v90=v76;local v91=v38;local v92=1;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -(958 -(892 + 65)) ;local v97={};local v98={};for v107=0,v96 do if (v107>=v90) then v94[v107-v90 ]=v95[v107 + 1 ];else v98[v107]=v95[v107 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do v100=v88[v92];v101=v100[1];if (v101<=41) then if (v101<=20) then if (v101<=9) then if (v101<=4) then if (v101<=(2 -1)) then if (v101==0) then v98[v100[2]]=v40(v89[v100[5 -2 ]],nil,v73);else local v132=v100[2];local v133=v98[v100[3]];v98[v132 + 1 ]=v133;v98[v132]=v133[v100[4]];end elseif (v101<=2) then v98[v100[2]]=v98[v100[4 -1 ]]%v100[354 -(87 + 263) ] ;elseif (v101==3) then local v222=0;local v223;while true do if (v222==0) then v223=v100[2];v98[v223]=v98[v223]();break;end end else local v224=0;local v225;local v226;while true do if (v224==1) then for v370=1, #v97 do local v371=0;local v372;while true do if (0==v371) then v372=v97[v370];for v417=0, #v372 do local v418=v372[v417];local v419=v418[1];local v420=v418[182 -(67 + 113) ];if ((v419==v98) and (v420>=v225)) then local v422=0;while true do if (0==v422) then v226[v420]=v419[v420];v418[1 + 0 ]=v226;break;end end end end break;end end end break;end if (v224==0) then v225=v100[2];v226={};v224=1;end end end elseif (v101<=6) then if (v101==5) then local v138=v100[2];v98[v138](v21(v98,v138 + 1 ,v100[3]));elseif (v100[2]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=7) then do return;end elseif (v101==8) then local v228=0;local v229;local v230;while true do if (v228==1) then for v373=v229 + 1 ,v93 do v15(v230,v98[v373]);end break;end if (v228==0) then v229=v100[2];v230=v98[v229];v228=1;end end else local v231=0;local v232;while true do if (v231==0) then v232=v100[2];do return v98[v232](v21(v98,v232 + 1 ,v100[7 -4 ]));end break;end end end elseif (v101<=14) then if (v101<=11) then if (v101==10) then for v211=v100[2],v100[3] do v98[v211]=nil;end else local v139=0;local v140;while true do if (0==v139) then v140=v100[2];do return v21(v98,v140,v93);end break;end end end elseif (v101<=12) then v98[v100[2]]={};elseif (v101==13) then v98[v100[2]]=v72[v100[3]];else v98[v100[2]]=v40(v89[v100[3]],nil,v73);end elseif (v101<=17) then if (v101<=15) then v98[v100[2 + 0 ]][v98[v100[3]]]=v100[4];elseif (v101>(63 -47)) then v98[v100[2]]=v98[v100[955 -(802 + 150) ]];else v98[v100[2]]=v98[v100[3]][v100[4]];end elseif (v101<=18) then v73[v100[3]]=v98[v100[2]];elseif (v101==(50 -31)) then v92=v100[3];else v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;end elseif (v101<=(54 -24)) then if (v101<=25) then if (v101<=22) then if (v101==21) then if (v98[v100[2]]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end else local v146=0;local v147;while true do if (v146==0) then v147=v100[2];v98[v147](v21(v98,v147 + 1 ,v93));break;end end end elseif (v101<=23) then v98[v100[2]]=v98[v100[3 + 0 ]][v100[4]];elseif (v101>24) then v98[v100[2]]=v98[v100[3]]%v100[4] ;else v98[v100[2]][v98[v100[1000 -(915 + 82) ]]]=v98[v100[4]];end elseif (v101<=(76 -49)) then if (v101>26) then local v150=0;local v151;while true do if (0==v150) then v151=v100[2];v98[v151]=v98[v151](v21(v98,v151 + 1 ,v93));break;end end else local v152=v100[2];local v153=v98[v100[3]];v98[v152 + 1 ]=v153;v98[v152]=v153[v100[4]];end elseif (v101<=28) then local v157=v100[2];v98[v157](v98[v157 + 1 ]);elseif (v101==29) then v98[v100[2]]=v100[2 + 1 ];else local v248=v100[2];local v249=v98[v248];local v250=v98[v248 + 2 ];if (v250>0) then if (v249>v98[v248 + 1 ]) then v92=v100[3];else v98[v248 + 3 ]=v249;end elseif (v249<v98[v248 + 1 ]) then v92=v100[3];else v98[v248 + 3 ]=v249;end end elseif (v101<=35) then if (v101<=32) then if (v101>31) then local v158=0;local v159;local v160;local v161;while true do if (v158==0) then v159=v100[2];v160=v98[v159 + 2 ];v158=1;end if (v158==2) then if (v160>0) then if (v161<=v98[v159 + 1 ]) then v92=v100[3 -0 ];v98[v159 + 3 ]=v161;end elseif (v161>=v98[v159 + 1 ]) then v92=v100[3];v98[v159 + 3 ]=v161;end break;end if (v158==1) then v161=v98[v159] + v160 ;v98[v159]=v161;v158=2;end end else v98[v100[1189 -(1069 + 118) ]]();end elseif (v101<=33) then local v162=0;local v163;local v164;while true do if (v162==1) then for v312=1, #v97 do local v313=v97[v312];for v356=0, #v313 do local v357=0;local v358;local v359;local v360;while true do if (v357==0) then v358=v313[v356];v359=v358[1];v357=1;end if (v357==1) then v360=v358[2];if ((v359==v98) and (v360>=v163)) then local v421=0;while true do if (v421==0) then v164[v360]=v359[v360];v358[1]=v164;break;end end end break;end end end end break;end if (0==v162) then v163=v100[2];v164={};v162=1;end end elseif (v101>34) then v98[v100[2]]= #v98[v100[6 -3 ]];else v92=v100[3];end elseif (v101<=(82 -44)) then if (v101<=36) then for v213=v100[2],v100[3] do v98[v213]=nil;end elseif (v101==37) then if (v98[v100[2]]==v100[4]) then v92=v92 + 1 + 0 ;else v92=v100[4 -1 ];end else v98[v100[2]][v98[v100[3]]]=v98[v100[4]];end elseif (v101<=39) then do return;end elseif (v101==40) then v98[v100[2]]=v100[3] + v98[v100[4]] ;else v98[v100[2]]=v98[v100[3]] + v100[4] ;end elseif (v101<=62) then if (v101<=51) then if (v101<=46) then if (v101<=43) then if (v101>42) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;else local v166=0;local v167;local v168;local v169;while true do if (v166==0) then v167=v89[v100[3]];v168=nil;v166=1;end if (v166==2) then for v315=1,v100[4] do v92=v92 + 1 ;local v316=v88[v92];if (v316[1]==17) then v169[v315-1 ]={v98,v316[3]};else v169[v315-1 ]={v72,v316[3]};end v97[ #v97 + 1 ]=v169;end v98[v100[2]]=v40(v167,v168,v73);break;end if (1==v166) then v169={};v168=v18({},{[v7("\207\47\95\188\244\21\78","\210\144\112\54")]=function(v318,v319)local v320=0;local v321;while true do if (v320==0) then v321=v169[v319];return v321[1][v321[2]];end end end,[v7("\185\17\163\26\76\186\38\143\131\54","\235\230\78\205\127\59\211\72")]=function(v322,v323,v324)local v325=0;local v326;while true do if (0==v325) then v326=v169[v323];v326[1][v326[2]]=v324;break;end end end});v166=2;end end end elseif (v101<=44) then local v170=0;local v171;while true do if (v170==0) then v171=v100[2];v98[v171]=v98[v171](v21(v98,v171 + 1 ,v100[3]));break;end end elseif (v101>45) then local v257=0;local v258;local v259;local v260;while true do if (0==v257) then v258=v100[2];v259=v98[v258];v257=1;end if (v257==1) then v260=v98[v258 + 2 ];if (v260>0) then if (v259>v98[v258 + 1 ]) then v92=v100[3];else v98[v258 + 3 ]=v259;end elseif (v259<v98[v258 + 1 ]) then v92=v100[3];else v98[v258 + 3 ]=v259;end break;end end else local v261=v100[2];local v262=v98[v261];for v306=v261 + 1 ,v93 do v15(v262,v98[v306]);end end elseif (v101<=48) then if (v101==47) then local v172=v100[2];local v173,v174=v91(v98[v172](v21(v98,v172 + 1 ,v100[3])));v93=(v174 + v172) -1 ;local v175=0;for v215=v172,v93 do v175=v175 + 1 ;v98[v215]=v173[v175];end else local v176=0;local v177;while true do if (v176==0) then v177=v100[2];do return v98[v177](v21(v98,v177 + 1 ,v100[3]));end break;end end end elseif (v101<=49) then v98[v100[793 -(368 + 423) ]]=v98[v100[3]];elseif (v101==(157 -107)) then if (v100[2]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end else local v263=0;local v264;local v265;local v266;local v267;while true do if (v263==2) then for v380=v264,v93 do local v381=0;while true do if (v381==0) then v267=v267 + 1 ;v98[v380]=v265[v267];break;end end end break;end if (v263==1) then v93=(v266 + v264) -1 ;v267=0;v263=2;end if (v263==0) then v264=v100[2];v265,v266=v91(v98[v264](v21(v98,v264 + 1 ,v100[3])));v263=1;end end end elseif (v101<=(74 -(10 + 8))) then if (v101<=53) then if (v101==52) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else do return v98[v100[2]]();end end elseif (v101<=54) then local v180=0;local v181;local v182;local v183;while true do if (2==v180) then for v328=1,v100[4] do local v329=0;local v330;while true do if (0==v329) then v92=v92 + (443 -(416 + 26)) ;v330=v88[v92];v329=1;end if (v329==1) then if (v330[1]==17) then v183[v328-1 ]={v98,v330[3]};else v183[v328-(1 -0) ]={v72,v330[3]};end v97[ #v97 + 1 ]=v183;break;end end end v98[v100[2]]=v40(v181,v182,v73);break;end if (1==v180) then v183={};v182=v18({},{[v7("\239\118\36\64\131\249\200","\156\176\41\77\46\231")]=function(v331,v332)local v333=0;local v334;while true do if (0==v333) then v334=v183[v332];return v334[1][v334[2]];end end end,[v7("\127\133\90\179\166\79\78\190\81\174","\38\32\218\52\214\209")]=function(v335,v336,v337)local v338=0;local v339;while true do if (v338==0) then v339=v183[v336];v339[1][v339[7 -5 ]]=v337;break;end end end});v180=2;end if (v180==0) then v181=v89[v100[3]];v182=nil;v180=1;end end elseif (v101==55) then local v269=v100[440 -(145 + 293) ];local v270=v98[v269 + (432 -(44 + 386)) ];local v271=v98[v269] + v270 ;v98[v269]=v271;if (v270>0) then if (v271<=v98[v269 + 1 ]) then local v382=0;while true do if (v382==0) then v92=v100[3];v98[v269 + (1489 -(998 + 488)) ]=v271;break;end end end elseif (v271>=v98[v269 + 1 ]) then local v383=0;while true do if (v383==0) then v92=v100[3];v98[v269 + 3 ]=v271;break;end end end else local v273=v100[2];v98[v273]=v98[v273](v21(v98,v273 + 1 ,v100[3]));end elseif (v101<=59) then if (v101<=57) then local v184=v100[2];v98[v184]=v98[v184]();elseif (v101>58) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else local v275=v100[2];v98[v275](v98[v275 + 1 ]);end elseif (v101<=60) then if (v98[v100[2]]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101==61) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif  not v98[v100[2]] then v92=v92 + 1 + 0 ;else v92=v100[3 + 0 ];end elseif (v101<=(844 -(201 + 571))) then if (v101<=67) then if (v101<=64) then if (v101>63) then do return v98[v100[2]]();end else local v186=v100[2];local v187,v188=v91(v98[v186](v98[v186 + 1 ]));v93=(v188 + v186) -1 ;local v189=0;for v218=v186,v93 do local v219=0;while true do if (v219==0) then v189=v189 + (1139 -(116 + 1022)) ;v98[v218]=v187[v189];break;end end end end elseif (v101<=65) then local v190=v100[2];v98[v190](v21(v98,v190 + 1 ,v93));elseif (v101>66) then local v277=0;local v278;local v279;local v280;local v281;while true do if (v277==0) then v278=v100[2];v279,v280=v91(v98[v278](v98[v278 + 1 ]));v277=1;end if (v277==2) then for v384=v278,v93 do v281=v281 + 1 ;v98[v384]=v279[v281];end break;end if (v277==1) then v93=(v280 + v278) -1 ;v281=0;v277=2;end end else v98[v100[2]]();end elseif (v101<=69) then if (v101==68) then local v191=v100[2];local v192,v193=v91(v98[v191](v21(v98,v191 + 1 ,v93)));v93=(v193 + v191) -1 ;local v194=0;for v220=v191,v93 do local v221=0;while true do if (v221==0) then v194=v194 + 1 ;v98[v220]=v192[v194];break;end end end else local v195=0;local v196;while true do if (v195==0) then v196=v100[2];do return v21(v98,v196,v93);end break;end end end elseif (v101<=70) then v98[v100[2]]=v72[v100[3]];elseif (v101==71) then local v282=0;local v283;while true do if (v282==0) then v283=v100[2];v98[v283]=v98[v283](v21(v98,v283 + 1 ,v93));break;end end elseif (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=77) then if (v101<=74) then if (v101==(303 -230)) then local v199=v100[2];v98[v199](v21(v98,v199 + 1 ,v100[2 + 1 ]));else v98[v100[2]]= #v98[v100[3]];end elseif (v101<=75) then v98[v100[2]]=v100[3];elseif (v101>76) then v98[v100[2]][v98[v100[3]]]=v100[4];else v98[v100[2]]=v98[v100[3]] + v100[4] ;end elseif (v101<=80) then if (v101<=78) then v73[v100[3]]=v98[v100[2]];elseif (v101==79) then v98[v100[2]]=v100[3] + v98[v100[4]] ;else v98[v100[2]]={};end elseif (v101<=81) then local v205=0;local v206;local v207;local v208;local v209;while true do if (v205==1) then v93=(v208 + v206) -1 ;v209=0;v205=2;end if (v205==0) then v206=v100[2];v207,v208=v91(v98[v206](v21(v98,v206 + 1 ,v93)));v205=1;end if (v205==2) then for v348=v206,v93 do local v349=0;while true do if (0==v349) then v209=v209 + 1 ;v98[v348]=v207[v209];break;end end end break;end end elseif (v101>82) then v98[v100[2]]=v73[v100[3]];else v98[v100[2]]=v73[v100[10 -7 ]];end v92=v92 + 1 ;end end;end return v40(v39(),{},v28)(...);end vv17(),...);
